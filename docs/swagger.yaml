definitions:
  controller.CategoryInput:
    properties:
      name:
        type: string
    type: object
  controller.LoginInput:
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - password
    - role
    - username
    type: object
  controller.OrderInput:
    properties:
      status:
        type: string
      total_price:
        type: integer
      user_id:
        type: integer
    type: object
  controller.OrderItemInput:
    properties:
      order_id:
        type: integer
      product_id:
        type: integer
      quantity:
        type: integer
      sub_total:
        type: integer
    type: object
  controller.RegisterInput:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - role
    - username
    type: object
  controller.ReviewInput:
    properties:
      Comment:
        type: string
      Rating:
        type: integer
      products_id:
        type: integer
      user_id:
        type: integer
    type: object
  controller.productInput:
    properties:
      category_id:
        type: integer
      description:
        type: string
      name:
        type: string
      price:
        type: integer
      stock:
        type: integer
    type: object
  models.Category:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Order:
    properties:
      created_at:
        type: string
      id:
        type: integer
      status:
        type: string
      total_price:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.OrderItem:
    properties:
      created_at:
        type: string
      id:
        type: integer
      order_id:
        type: integer
      product_id:
        type: integer
      quantity:
        type: integer
      sub_total:
        type: integer
      updated_at:
        type: string
    type: object
  models.Product:
    properties:
      category_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      stock:
        type: integer
      updated_at:
        type: string
    type: object
  models.ReviewProduct:
    properties:
      comment:
        type: string
      created_at:
        type: string
      id:
        type: integer
      product_id:
        type: integer
      rating:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /categories:
    get:
      description: Get a list of Category of Product.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
      summary: Get all Category.
      tags:
      - Category
    post:
      description: Creating a new category of product.
      parameters:
      - description: the body to create a new Category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.CategoryInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
      security:
      - BearerToken: []
      summary: Create New Category.
      tags:
      - Category
  /categories/{id}:
    delete:
      description: Delete a Category by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Category.
      tags:
      - Category
    get:
      description: Get an Category by id.
      parameters:
      - description: Category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
      summary: Get Category.
      tags:
      - Category
    patch:
      description: Update Category by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Category id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update age rating category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.CategoryInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
      security:
      - BearerToken: []
      summary: Update Category.
      tags:
      - Category
  /categories/{id}/products:
    get:
      description: Get all Products by CategoryId.
      parameters:
      - description: Category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: Get Products.
      tags:
      - Category
  /login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login as as user.
      tags:
      - Auth
  /order:
    get:
      description: Get a list of Order User.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      summary: Get all Order.
      tags:
      - Order
    post:
      description: Creating a new Order User.
      parameters:
      - description: the body to create a new Order
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.OrderInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      security:
      - BearerToken: []
      summary: Create New Order.
      tags:
      - Order
  /order-item:
    get:
      description: Get a list of Order Product.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OrderItem'
            type: array
      summary: Get all Order Product.
      tags:
      - OrderItem
    post:
      description: Creating a new Order Product.
      parameters:
      - description: the body to create a new Order
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.OrderItemInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderItem'
      security:
      - BearerToken: []
      summary: Create New Order Product.
      tags:
      - OrderItem
  /order-item/{id}:
    delete:
      description: Delete a OrderItem by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: OrderItem id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Order Product.
      tags:
      - OrderItem
    get:
      description: Get an Order Product by id.
      parameters:
      - description: OrderItem id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderItem'
      summary: Get Order Product.
      tags:
      - OrderItem
    patch:
      description: Update Order Product.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: OrderItem id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update orderItem
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.OrderItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderItem'
      security:
      - BearerToken: []
      summary: Update Order Product.
      tags:
      - OrderItem
  /order/{id}:
    delete:
      description: Delete a Order by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Order.
      tags:
      - Order
    get:
      description: Get an Order by id.
      parameters:
      - description: Order id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Get Order.
      tags:
      - Order
    patch:
      description: Update Order user.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update order
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.OrderInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      security:
      - BearerToken: []
      summary: Update Order.
      tags:
      - Order
  /product:
    get:
      description: Get a list of Product.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: Get all product.
      tags:
      - Product
    post:
      description: Creating a new Product.
      parameters:
      - description: the body to create a new product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.productInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      security:
      - BearerToken: []
      summary: Create New Product.
      tags:
      - Product
  /product/{id}:
    delete:
      description: Delete a product by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one product.
      tags:
      - Product
    get:
      description: Get a Product by id.
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Get Product.
      tags:
      - Product
    patch:
      description: Update product by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update an product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.productInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      security:
      - BearerToken: []
      summary: Update Product.
      tags:
      - Product
  /register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a user.
      tags:
      - Auth
  /review:
    get:
      description: Get a list of Review.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ReviewProduct'
            type: array
      summary: Get all Review.
      tags:
      - Review
    post:
      description: Creating a new Review.
      parameters:
      - description: the body to create a new Review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.ReviewInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ReviewProduct'
      security:
      - BearerToken: []
      summary: Create New Review.
      tags:
      - Review
  /review/{id}:
    delete:
      description: Delete a Review by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one Order Product.
      tags:
      - Review
    get:
      description: Get a Review by id.
      parameters:
      - description: Review id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ReviewProduct'
      summary: Get Review.
      tags:
      - Review
    patch:
      description: Update Review.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controller.ReviewInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ReviewProduct'
      security:
      - BearerToken: []
      summary: Update Review.
      tags:
      - Review
swagger: "2.0"
